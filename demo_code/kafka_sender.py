from typing import Dict

from kafka import KafkaProducer

from config import cfg
import kafka
import uuid
import json
import random


class KafkaSender:
    def __init__(self):
        self.producer: KafkaProducer = kafka.KafkaProducer(
            bootstrap_servers=cfg.kafka_hosts,
        )

    def generate_message(self) -> json:

        """
        The generate_message function is used to generate a random message that will be sent to the Kafka topic.
        The function returns a JSON object with the following fields:
            - Message_Id: A unique identifier for each message. This field is generated using Python's uuid library, which generates UUIDs based on RFC 4122.
            - Code: The product code of the item being purchased (e.g., &quot;A123&quot;). This field is randomly selected from one of the products in config/configuration.py file and then added to our JSON object as a string value under key 'Code'.
            - Product:

        :param self: Refer to the object itself
        :return: A json encoded string
        :doc-author: Trelent | SenorK0tik
        """
        product: Dict[str, str | int] = random.choice(cfg.products)
        message = {
            'Message_Id': str(uuid.uuid4()),
            'Code': product['Code'],
            'Product': product['Name'],
            'Price': product['Price'],
        }
        return json.dumps(message).encode()

    def send(self) -> None:
        """
        The send function is used to send a message to the input-topic.
        The message is generated by the generate_message function, which returns a string of random characters.


        :param self: Represent the instance of the class
        :return: None
        :doc-author: Trelent
        """
        self.producer.send(
            'input-topic',
            value=self.generate_message(),
        )
        self.producer.flush()   # To be sure it's flushed in Kafka
